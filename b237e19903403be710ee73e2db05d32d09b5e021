{
  "comments": [
    {
      "key": {
        "uuid": "51479ae5_59a05034",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T23:34:45Z",
      "side": 1,
      "message": "Do you want to return on error or still continue?  Returning will abort future PECI reads on error which will leave you with no further data after a single error.",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d912380_77ba5bf4",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-02-15T09:12:10Z",
      "side": 1,
      "message": "I don\u0027t want to return not full data, I prefer to wait until next time to read it.\nIt is not so critical here, I think we can revert to \"continue\". Alternative (and IMHO better) way would be to implement Retry in peciAvailableCheck.",
      "parentUuid": "51479ae5_59a05034",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e65577c5_19d4d106",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-22T22:49:35Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8d912380_77ba5bf4",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f32b5fa_4ebd5334",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T23:34:45Z",
      "side": 1,
      "message": "The PECI driver already retries the PECI command for up to 700ms, so I don\u0027t think a retry at this level is needed.",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "733cbcb9_7774fb69",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-02-15T09:12:10Z",
      "side": 1,
      "message": "My practice shows that it\u0027s required. It not so often, but still sufficient. Otherwise I didn\u0027t start this refactoring at all.",
      "parentUuid": "9f32b5fa_4ebd5334",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94e7bec0_48df8e0d",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 169,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-22T22:49:35Z",
      "side": 1,
      "message": "There should be a 60-second delay before this starts scanning PCIe.  I wonder if that is not long enough for the PCIe space to stabilize in BIOS.  If you wait longer than 60 seconds before starting the scan, do you still need this retry?",
      "parentUuid": "733cbcb9_7774fb69",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ca62157_b74c1b08",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T23:34:45Z",
      "side": 1,
      "message": "I like the use of structured bindings, but in this case I think it may be easier to read if the std::string is passed in as a reference parameter and only the error code is returned.  It may make it more efficient as well to avoid making and breaking the tuples.",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c120f9a3_a3ba9b27",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-02-15T09:12:10Z",
      "side": 1,
      "message": "To be honest, I don\u0027t like to return function result as reference unless it is not modifying of something already exists in outer context, but if you thing it would be better here, I can rewrite this.",
      "parentUuid": "5ca62157_b74c1b08",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40954500_2ff27ba4",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 194,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-22T22:49:35Z",
      "side": 1,
      "message": "I feel like it\u0027s more standard to either return the error code and provide the data in a parameter or to return the data and provide the error code in a parameter.  Another way to do it would be to return a std::optional and use std::nullopt for the error.\n\nHowever, it looks like other functions here already return data in parameters by reference, so that way would stay consistent within this module.",
      "parentUuid": "c120f9a3_a3ba9b27",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99aa29cb_c4d4f1f1",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T23:34:45Z",
      "side": 1,
      "message": "Is there a reason this uses std::tie instead of auto []?",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b53a0d2a_f8637311",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-02-15T09:12:10Z",
      "side": 1,
      "message": "I don\u0027t know how to reuse variable with auto [], so I would need something like \"auto [multiFunc, error2]\"",
      "parentUuid": "99aa29cb_c4d4f1f1",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e5c0665_33429694",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 414,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-22T22:49:35Z",
      "side": 1,
      "message": "I see.  I think I may prefer error2 over std::tie.  std::tie makes this one look like it is different from the others for some reason.",
      "parentUuid": "b53a0d2a_f8637311",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ba86953_3dfc743c",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 600,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T23:34:45Z",
      "side": 1,
      "message": "Since the PECI commands are already retried, I don\u0027t think we need to retry here.",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eb4a230_5417d389",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 600,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-02-15T09:12:10Z",
      "side": 1,
      "message": "I don\u0027t remember details, two months past, but this was result of fighting with read errors: somewhy retrying above was not enough when host CPU busy.",
      "parentUuid": "6ba86953_3dfc743c",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db27db60_04b97b9e",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 600,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-22T22:49:35Z",
      "side": 1,
      "message": "I\u0027m okay with a retry, but it would be better if we can retry only in one place.\n\nDo you remember what error code you got?  I don\u0027t usually see PECI errors because of the host CPU being busy.",
      "parentUuid": "6eb4a230_5417d389",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f21f5e8e_8fe712c3",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 734,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-12T23:34:45Z",
      "side": 1,
      "message": "Is there a reason to move this to the main scope?",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6281a8f_c241b2fb",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 734,
      "author": {
        "id": 1000879
      },
      "writtenOn": "2021-02-15T09:12:10Z",
      "side": 1,
      "message": "Actually no. Just intention to make it more clear to read and understand scope of it.",
      "parentUuid": "f21f5e8e_8fe712c3",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "250d9ddc_5b8e9077",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 4
      },
      "lineNbr": 734,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2021-02-22T22:49:35Z",
      "side": 1,
      "message": "Ack.  That makes sense.  Only possible downside is it may persistently consume this memory, but it\u0027s very small, so probably not an issue.",
      "parentUuid": "d6281a8f_c241b2fb",
      "revId": "b237e19903403be710ee73e2db05d32d09b5e021",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}