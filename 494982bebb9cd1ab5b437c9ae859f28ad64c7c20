{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d98d380b_efddb678",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2022-12-17T09:06:00Z",
      "side": 1,
      "message": "Thank you for taking a look indeed.\nI wonder how come in your testing of the previous versions you weren\u0027t occassionally getting bogus data (extra random devices visible on D-Bus and via Redfish) due to concurrent scans, and whether my changes do not affect your platform negatively. Do you also get transient PECI timeouts with an idle host (CPUs in C6) and some UEFI early boot stages?\nBTW, all our tests were performed with default compile-time settings, that is, WAIT_FOR_OS_STANDBY not enabled and USE_RDENDPOINTCFG off.",
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edc68fd1_92325f50",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-01-04T18:36:19Z",
      "side": 1,
      "message": "Instead of a compiler option, you can use `constexpr` to provide a local debug variable.  Here is an example: https://github.com/openbmc/entity-manager/blob/master/src/overlay.cpp#L333.",
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0c83164_ab3b9e82",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-01-07T19:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edc68fd1_92325f50",
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff716c77_07d0e5e6",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 791,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-01-04T18:36:19Z",
      "side": 1,
      "message": "This message looks okay to always print, if you\u0027d like.",
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75d9617d_f933a50b",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 791,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-01-07T19:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff716c77_07d0e5e6",
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78fb6980_0259b57e",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 815,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2023-01-04T18:36:19Z",
      "side": 1,
      "message": "In OpenBMC \"\\n\" is preferred over `std::endl` as it avoids the extra buffer flush.",
      "range": {
        "startLine": 815,
        "startChar": 48,
        "endLine": 815,
        "endChar": 57
      },
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aff7146f_ee3610a8",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 815,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-01-07T19:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78fb6980_0259b57e",
      "range": {
        "startLine": 815,
        "startChar": 48,
        "endLine": 815,
        "endChar": 57
      },
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e06c90c1_2e3b62ba",
        "filename": "src/peci_pcie.cpp",
        "patchSetId": 2
      },
      "lineNbr": 815,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2023-01-09T15:52:47Z",
      "side": 1,
      "message": "There\u0027s an interesting related detail: for std::cerr specifically \"Once initialized, (std::cerr.flags() \u0026 unitbuf) !\u003d 0 (same for wcerr) meaning that any output sent to these stream objects is immediately flushed to the OS\", so \"\\n\" wouldn\u0027t avoid the extra flush in this case. That said, I agree it\u0027s better to always use \"\\n\" for consistency (or probably if we are nit picking performance then \u0027\\n\u0027 would be even more better?)",
      "parentUuid": "aff7146f_ee3610a8",
      "range": {
        "startLine": 815,
        "startChar": 48,
        "endLine": 815,
        "endChar": 57
      },
      "revId": "494982bebb9cd1ab5b437c9ae859f28ad64c7c20",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}